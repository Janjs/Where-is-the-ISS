{"ast":null,"code":"import _slicedToArray from\"/Users/janjimenezserra/Desktop/Coding Projects/Find the ISS/where-is-the-iss/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from\"react\";function getWindowDimensions(){var _window=window,width=_window.innerWidth,height=_window.innerHeight;return{width:width,height:height};}export var useWindowDimensions=function useWindowDimensions(){var _useState=useState(getWindowDimensions()),_useState2=_slicedToArray(_useState,2),windowDimensions=_useState2[0],setWindowDimensions=_useState2[1];useEffect(function(){function handleResize(){setWindowDimensions(getWindowDimensions());}window.addEventListener(\"resize\",handleResize);return function(){return window.removeEventListener(\"resize\",handleResize);};},[]);return windowDimensions;};","map":{"version":3,"sources":["/Users/janjimenezserra/Desktop/Coding Projects/Find the ISS/where-is-the-iss/src/dimensions.js"],"names":["useState","useEffect","getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener"],"mappings":"mMAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAEA,QAASC,CAAAA,mBAAT,EAA+B,aACsBC,MADtB,CACTC,KADS,SACrBC,UADqB,CACWC,MADX,SACFC,WADE,CAE7B,MAAO,CACLH,KAAK,CAALA,KADK,CAELE,MAAM,CAANA,MAFK,CAAP,CAID,CAED,MAAO,IAAME,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,eACSR,QAAQ,CACtDE,mBAAmB,EADmC,CADjB,wCAChCO,gBADgC,eACdC,mBADc,eAKvCT,SAAS,CAAC,UAAM,CACd,QAASU,CAAAA,YAAT,EAAwB,CACtBD,mBAAmB,CAACR,mBAAmB,EAApB,CAAnB,CACD,CAEDC,MAAM,CAACS,gBAAP,CAAwB,QAAxB,CAAkCD,YAAlC,EACA,MAAO,kBAAMR,CAAAA,MAAM,CAACU,mBAAP,CAA2B,QAA3B,CAAqCF,YAArC,CAAN,EAAP,CACD,CAPQ,CAON,EAPM,CAAT,CASA,MAAOF,CAAAA,gBAAP,CACD,CAfM","sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nexport const useWindowDimensions = () => {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n"]},"metadata":{},"sourceType":"module"}