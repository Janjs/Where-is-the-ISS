{"ast":null,"code":"var _jsxFileName = \"/Users/janjimenezserra/Desktop/Coding Projects/Find the ISS/find-the-iss/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { ComposableMap, Geographies, Geography, Marker } from \"react-simple-maps\";\nimport { useWindowDimensions } from \"./dimensions.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst App = () => {\n  _s();\n\n  const [issLoc, setIssLoc] = useState({});\n  const [isLoading, setLoading] = useState(true);\n  useEffect(() => {\n    fetch(\"http://api.open-notify.org/iss-now.json\").then(response => response.json()).then(json => setIssLoc(json.iss_position)).catch(error => console.error(error)).finally(() => setLoading(false));\n  }, []);\n  console.log(issLoc);\n  const {\n    height,\n    width\n  } = useWindowDimensions();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style.container,\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: style.title,\n      children: \"Here is where the ISS is flying over\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ComposableMap, {\n        width: width,\n        height: height - 100,\n        children: [/*#__PURE__*/_jsxDEV(Geographies, {\n          geography: geoUrl,\n          style: style.map,\n          children: ({\n            geographies\n          }) => geographies.map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n            geography: geo\n          }, geo.rsmKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          coordinates: [issLoc.longitude, issLoc.latitude],\n          children: /*#__PURE__*/_jsxDEV(\"circle\", {\n            r: 8,\n            fill: \"#F53\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: style.button,\n      children: \"Reload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"u3MIvHzMIBXUnGnXlk9KG+gucmk=\", false, function () {\n  return [useWindowDimensions];\n});\n\n_c = App;\nconst style = {\n  container: {\n    margin: 0\n  },\n  title: {\n    color: \"#ffffff\",\n    marginBottom: 0\n  },\n  map: {\n    fill: \"#0b3d91\"\n  },\n  button: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: \"white\",\n    margin: 5\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: \"bold\",\n    letterSpacing: 0.25,\n    color: \"black\"\n  }\n};\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/janjimenezserra/Desktop/Coding Projects/Find the ISS/find-the-iss/src/App.js"],"names":["ComposableMap","Geographies","Geography","Marker","useWindowDimensions","React","useEffect","useState","geoUrl","App","issLoc","setIssLoc","isLoading","setLoading","fetch","then","response","json","iss_position","catch","error","console","finally","log","height","width","style","container","title","map","geographies","geo","rsmKey","longitude","latitude","button","margin","color","marginBottom","fill","alignItems","justifyContent","paddingVertical","paddingHorizontal","borderRadius","elevation","backgroundColor","text","fontSize","lineHeight","fontWeight","letterSpacing"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n} from \"react-simple-maps\";\nimport { useWindowDimensions } from \"./dimensions.js\"\nimport React, { useEffect, useState } from \"react\";\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\n\nconst App = () => {\n  const [issLoc, setIssLoc] = useState({});\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetch(\"http://api.open-notify.org/iss-now.json\")\n      .then((response) => response.json())\n      .then((json) => setIssLoc(json.iss_position))\n      .catch((error) => console.error(error))\n      .finally(() => setLoading(false));\n  }, []);\n\n  console.log(issLoc)\n\n  const { height, width } = useWindowDimensions();\n  return (\n    <div style={style.container} className=\"App\">\n      <h1 style={style.title}>Here is where the ISS is flying over</h1>\n      {!isLoading && (\n        <div>\n          <ComposableMap width={width} height={height - 100}>\n            <Geographies geography={geoUrl} style={style.map}>\n              {({ geographies }) =>\n                geographies.map((geo) => (\n                  <Geography key={geo.rsmKey} geography={geo} />\n                ))\n              }\n            </Geographies>\n            <Marker coordinates={[issLoc.longitude, issLoc.latitude]}>\n              <circle r={8} fill=\"#F53\" />\n            </Marker>\n          </ComposableMap>\n        </div>\n      )}\n      <button style={style.button}>Reload</button>\n    </div>\n  );\n}\n\nconst style = {\n  container: {\n    margin: 0,\n  },\n  title: {\n    color: \"#ffffff\",\n    marginBottom: 0,\n  },\n  map: {\n    fill: \"#0b3d91\",\n  },\n  button: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: \"white\",\n    margin: 5\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: \"bold\",\n    letterSpacing: 0.25,\n    color: \"black\",\n  },\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}